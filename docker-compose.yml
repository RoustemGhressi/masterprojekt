version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 0000
      POSTGRES_DB: cine_vision
      PG_DATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - data:/data/db
    networks:
      - default

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - "8091:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - default

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - default

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    depends_on:
      - zookeeper
    networks:
      - default

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.2
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8181:8080"
    command:
      - start-dev
    networks:
      - default

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - default

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - default

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - default

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Mount the Docker socket
    privileged: true   # Allow Jenkins to run Docker commands
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - default
    restart: unless-stopped

volumes:
  postgres:
  data:
  grafana-storage:
  jenkins_home:

networks:
  postgres:
    driver: bridge
  default:
    driver: bridge

    